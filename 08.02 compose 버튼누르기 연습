package com.example.countup

import android.content.Context
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.layout.*
import androidx.compose.material3.Button
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.unit.dp
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import com.example.countup.ui.theme.CountUpTheme




class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            CountUpTheme {
                ClickCounterApp()
            }
        }
    }
}

@Composable
fun ClickCounterApp() {
    var clickCount by remember { mutableStateOf(0) }

    Surface(color = MaterialTheme.colorScheme.background) {
        Column(
            modifier = Modifier
                .fillMaxSize()
                .padding(16.dp),
            verticalArrangement = Arrangement.Center,
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            Text(
                text = "버튼을 누르면 클릭 횟수가 증가합니다.",
                color = Color.Black
            )

            Spacer(modifier = Modifier.height(16.dp))

            Text(
                text = "클릭 횟수: $clickCount",
                color = Color.Black
            )

            Spacer(modifier = Modifier.height(16.dp))

            Button(
                onClick = { clickCount++ }
            ) {
                Text("버튼 누르기")
            }
        }
    }
}

// 앱 상태를 저장하는 함수
private fun saveClickCount(context: Context, count: Int) {
    val sharedPref = context.getSharedPreferences("app_preferences", Context.MODE_PRIVATE)
    with(sharedPref.edit()) {
        putInt("click_count", count)
        apply()
    }
}

// 앱 상태를 복원하는 함수
private fun restoreClickCount(context: Context): Int {
    val sharedPref = context.getSharedPreferences("app_preferences", Context.MODE_PRIVATE)
    return sharedPref.getInt("click_count", 0)
}

@Preview(showBackground = true)
@Composable
fun DefaultPreview() {
    CountUpTheme {
        ClickCounterApp()
    }
}

// 껏다 키면 아직 클릭수 저장이 안됌
